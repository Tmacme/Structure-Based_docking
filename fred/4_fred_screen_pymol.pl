#!/usr/bin/perl -w

###################
#
#	Peter M.U. Ung @ MSSM
#
#	v1.0	- 13.10.22	
#	v2.0	- 13.11.04 - Lig is represented by Top pose with ZINC ID
#
#	Using the [top result file] generated by vina_screen_get_top.py to
#	aggegrate the top pdbqt files into a PyMOL session
#
#	Required:	vina_screen_preprocess.py
#			vina_screen_get_top.py
#			
###################
die "\n    Usage: x.pl [sdf file prefix] [Protein pdb]\n
        -- Do it at the same level as the directories with Vina docked results --\n\n"
  unless @ARGV == 2;


open OUT, "> $ARGV[0].pml";
print OUT "load ".$ARGV[1]."\n";	# Load ref PDB into PyMOL

@sdf = ();
$repeat = `~/Dropbox/9_scripts/1_Docking/autodock4/split_mol2_sdf.pl $ARGV[0].sdf $ARGV[0].ref.txt`;  
print $repeat;
for ($i = 0; $i <= $repeat; $i++) { 
  my $x = sprintf "load ./$ARGV[0].sdf.$i.sdf , x.$i\n" ;	# Load sdf file into PyMOL
  push @sdf, $x;
}

print OUT "load $ARGV[0].sdf\n";
foreach (@sdf) { print OUT; }
print OUT "hide lines, poly\n";
print OUT "set line_width, 4\n";
print OUT "show cartoon, poly\n";
print OUT "set transparency, 0.1\n";
print OUT "show surface, poly\n";
print OUT "color cyan, poly\n";
print OUT "center poly\n zoom poly\n";
print OUT "save ".$ARGV[0].".pse\nquit\n";
close OUT;

system("pymol -c ".$ARGV[0].".pml");
system("rm ".$ARGV[0].".pml");
system("rm ./$ARGV[0].sdf.*.sdf");
