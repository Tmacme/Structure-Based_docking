#!/usr/bin/python

import sys,os,re,shutil
from CommonUtility import *

##########################################################################
#
#   Peter M.U. Ung @ MSSM
#
#   v1.0    16.08.03
#   v1.1    16.10.25    - bugfix
#
#   Consolidate Schrodinger's IFD top results and put them into a folder
#       * automatically extract the result structure files from csv 
#       * consolidate the result structures into pymol 
#
##########################################################################
msg = '''\n    > {0}
          [IFD result .csv file] [multi-pdb filename prefix]\n
      e.g.> x.py report.csv type_IB.dyrk1a.hit1\n'''.format(sys.argv[0])
if len(sys.argv) != 3: sys.exit(msg)

infile = sys.argv[1]    # csv file
multi  = sys.argv[2]    # prefix of multi-pdb filename

##########################################################################
## Parse the result csv and extract the result structure file names
Items = []
for line in file_handle(infile):
  if re.search(r'Entry', line): continue
  i = line.split(',')
  Items.append([int(i[1]), i[5]])	# Ligand number is integer

LigGroups = {}
for item in Items:
  struct_name = item[1].rstrip()
  if not LigGroups.get(item[0]):
    LigGroups[item[0]] = [struct_name]
  else:
    LigGroups[item[0]].append(struct_name)
print('# Number of Ligand Group found: {0}'.format(len(LigGroups)))
 
##########################################################################
## create result folder
if not os.path.exists('1_data'):
  os.makedirs('1_data')
shutil.copy('report.csv', '1_data')

## Find the result files in the result csv and use them to build pymol session
pml = open('_temp.pml', 'w')
#for key in xrange(1,len(Structures)+1,1)):
keylist = sorted(LigGroups.keys())     # sort the 'key' by Ligand number
print(keylist)
for key in keylist:
  with open('_temp.list.{0}'.format(key), 'w') as fo:
    for mae in LigGroups[key]:
      name = mae.split('.mae')[0]
      print(name)
      fo.write(name+'.pdb\n')
      os.system('$SCHRODINGER/utilities/structconvert -imae {0}.maegz -opdb _temp.pdb'.format(name))
      os.system('grep -v "MODEL" _temp.pdb | grep -v "ENDMDL" > {0}.pdb'.format(name))

  os.system('/home/pmung/Dropbox/9_scripts/3_program/structures/0_build_multi_pdb.py _temp.list.{0} {1}.{0}.pdb'.format(key, multi))  
  
  pml.write('load {0}.{1}.pdb.bz2\n'.format(multi, key))
  pml.write('distance hb.{0}, {1}.{0} and poly, {1}.{0} and org, mode=2\n'.format(key, multi))
  os.system('bzip2 {1}.{0}.pdb'.format(key,multi))
  shutil.copy('{1}.{0}.pdb.bz2'.format(key, multi), '1_data')


pml.write('show cartoon\n')
pml.write('hide lines\n')
pml.write('show sticks, org\nshow lines, org\n')
pml.write('show lines, byres poly within 6 of org\n')
pml.write('hide (h. and (e. c extend 1))\n')  #hide nonpolar hydrogens
pml.write('set valence\n')
pml.write('util.cbaw poly\n')
pml.write('util.cbas org\n')
pml.write('center org\n')
pml.write('save {0}.pse'.format(multi))
pml.close()

os.system('pymol -c _temp.pml')
shutil.copy('{0}.pse'.format(multi), '1_data')

